name: 'Prepare Release Files'

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+.[0-9]+'
    branches:
      - 'gh-actions-release-files*' # TODO: For testing the workflow only

jobs:
  determine-version:
    runs-on: ubuntu-latest

    outputs:
      LPSOLVE_VERSION: ${{ steps.extract-version.outputs.LPSOLVE_VERSION }}

    steps:
    - name: Checkout
      uses: actions/checkout@v5

    # TODO: in a real release, we _might_ want to extract that number from the tag instead
    #       or maybe update the values in lp_lib.h based on the values extracted from the tag
    - name: Extract Version Number
      id: extract-version
      # lp_lib.h contains the version information as:
      #     #define MAJORVERSION  5
      #     #define MINORVERSION  5
      #     #define RELEASE       2
      #     #define BUILD        14
      run: |
        LP_MAJOR=$( sed -n -E 's/^\s*#define\s+MAJORVERSION\s+([0-9]+).*$/\1/p' $GITHUB_WORKSPACE/lp_lib.h )
        LP_MINOR=$( sed -n -E 's/^\s*#define\s+MINORVERSION\s+([0-9]+).*$/\1/p' $GITHUB_WORKSPACE/lp_lib.h )
        LP_RELEASE=$( sed -n -E 's/^\s*#define\s+RELEASE\s+([0-9]+).*$/\1/p' $GITHUB_WORKSPACE/lp_lib.h )
        LP_BUILD=$( sed -n -E 's/^\s*#define\s+BUILD\s+([0-9]+).*$/\1/p' $GITHUB_WORKSPACE/lp_lib.h )
        LPSOLVE_VERSION=$LP_MAJOR.$LP_MINOR.$LP_RELEASE.$LP_BUILD
        echo "Version is $LPSOLVE_VERSION"
        echo "LPSOLVE_VERSION=$LPSOLVE_VERSION" >> "$GITHUB_OUTPUT"

  build-win64:
    needs: determine-version
    runs-on: windows-latest

    env:
      LPSOLVE_WORKSPACE: ${{ github.workspace }}
      LPSOLVE_VERSION: ${{ needs.determine-version.outputs.LPSOLVE_VERSION }}
      LPSOLVE_PLATFORM: 'win64'

    steps:

    - name: Checkout
      uses: actions/checkout@v5

    - name: Configure build tools
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ env.LPSOLVE_PLATFORM }}

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_dev_${{ env.LPSOLVE_PLATFORM }}.zip
      run: release_process/build-zip-dev_winXX.ps1

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       bfp_GLPK.dll
    #       xli_MathProg.dll
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: release_process/build-zip-exe_winXX.ps1

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       bin/win64/lp_explicit.lib
    #       mxlpsolve.mexw64
    # If we decide not to ship those anymore, should we include Makefile.m instead like MATLAB.htm describes?
    # Maybe also the *.h and *.c that might be needed to build these within MATLAB?
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_MATLAB_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: release_process/build-zip-MATLAB_exe_winXX.ps1

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       bin/win64/sclpsolve.dll
    #       macros/lib
    # If we decide not to ship those anymore, should we include src/ folder?
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_scilab_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: release_process/build-zip-scilab_exe_winXX.ps1

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}.chm
      run: release_process/build-chm.ps1

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.LPSOLVE_PLATFORM }}
        compression-level: 0 # no compression - already compressed
        retention-days: 1
        path: |
          *.zip
          *.chm

  build-win32:
    needs: determine-version
    runs-on: windows-latest

    env:
      LPSOLVE_WORKSPACE: ${{ github.workspace }}
      LPSOLVE_VERSION: ${{ needs.determine-version.outputs.LPSOLVE_VERSION }}
      LPSOLVE_PLATFORM: 'win32'

    steps:

    - name: Checkout
      uses: actions/checkout@v5

    - name: Configure build tools
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ env.LPSOLVE_PLATFORM }}

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_dev_${{ env.LPSOLVE_PLATFORM }}.zip
      run: release_process/build-zip-dev_winXX.ps1

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       bfp_GLPK.dll
    #       xli_LPFML.dll
    #       xli_MathProg.dll
    #       xli_ZIMPL.dll
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: release_process/build-zip-exe_winXX.ps1

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       lpsolve.exe (which seems to be built from extra/AMPL/solvers/lpsolve/makefile5*.vc)
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_AMPL_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: release_process/build-zip-AMPL_exe_winXX.ps1

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       eulpsolve.dll(which seems to be built from extra/Euler/cvc.bat)
    #       intsimplex.e
    #       loadlpsolve.en
    #       loadlpsolve70.en
    #       Test Problems.en
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_Euler_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: release_process/build-zip-Euler_exe_winXX.ps1

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       fmlpsolve.dll(which seems to be built from extra/FreeMat/cvc.bat)
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_FreeMat_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: release_process/build-zip-FreeMat_exe_winXX.ps1

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       bin/win32/lp_explicit.lib
    #       mxlpsolve.dll
    #       mxlpsolve.mexw32
    # If we decide not to ship those anymore, should we include Makefile.m instead like MATLAB.htm describes?
    # Maybe also the *.h and *.c that might be needed to build these within MATLAB?
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_MATLAB_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: release_process/build-zip-MATLAB_exe_winXX.ps1

    # TODO: This only contains an HTML file, do we still want to release this?
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_MSF_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: release_process/build-zip-MSF_exe_winXX.ps1

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       octlpsolve.oct
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_octave_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: release_process/build-zip-octave_exe_winXX.ps1

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       omlpsolve.dll (which seems built from cvc.bat)
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_OMATRIX_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: release_process/build-zip-OMATRIX_exe_winXX.ps1

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       php4/php_phplpsolve55.dll
    #       php5_2/php_phplpsolve55.dll
    #       php5_3/php_phplpsolve55.dll
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_PHP_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: release_process/build-zip-PHP_exe_winXX.ps1

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       bin/win32/sclpsolve.dll
    #       macros/lib
    # If we decide not to ship those anymore, should we include src/ folder?
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_scilab_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: release_process/build-zip-scilab_exe_winXX.ps1

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       sqlpsolveext.dll (seems to be built from cvc.bat)
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_Sysquake_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: release_process/build-zip-Sysquake_exe_winXX.ps1

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.LPSOLVE_PLATFORM }}
        compression-level: 0 # no compression - already compressed
        retention-days: 1
        path: |
          *.zip

  zip-on-windows:
    needs: determine-version
    runs-on: windows-latest

    env:
      LPSOLVE_WORKSPACE: ${{ github.workspace }}
      LPSOLVE_VERSION: ${{ needs.determine-version.outputs.LPSOLVE_VERSION }}

    steps:

    - name: Checkout
      uses: actions/checkout@v5

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_access.zip
      run: release_process/build-zip-access.ps1

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       lpsolve55COM.dll
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_COM.zip
      run: release_process/build-zip-COM.ps1

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_cs.net.zip
      run: release_process/build-zip-cs.net.ps1

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_Delphi.zip
      run: release_process/build-zip-Delphi.ps1

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_excel.zip
      run: release_process/build-zip-excel.ps1

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_IDE_source.zip
      run: release_process/build-zip-IDE_source.ps1

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       lib/mac/build-osx
    #       lib/ux32/liblpsolve55j.so
    #       lib/ux64/liblpsolve55j.so
    #       lib/win32/lpsolve55j.dll
    #       lib/win64/lpsolve55j.dll
    #       lib/junit.jar
    #       lib/lpsolve55j.jar
    #       lib/build
    #       lib/build.bat
    # We have 2 extra files in zip:
    #       lp_solve_5.5_java/src/java/Perf.java
    #       lp_solve_5.5_java/src/java/IsolatedTest.java
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_java.zip
      run: release_process/build-zip-java.ps1

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_MSF_source.zip
      run: release_process/build-zip-MSF_source.ps1

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_vb.net.zip
      run: release_process/build-zip-vb.net.ps1

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_vb.zip
      run: release_process/build-zip-vb.ps1

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.job }}
        compression-level: 0 # no compression - already compressed
        retention-days: 1
        path: |
          *.zip
          README.txt

  tar-gz-on-linux:
    needs: determine-version
    runs-on: ubuntu-latest

    env:
      LPSOLVE_WORKSPACE: ${{ github.workspace }}
      LPSOLVE_VERSION: ${{ needs.determine-version.outputs.LPSOLVE_VERSION }}
      # TODO: decide what we want as root folder inside the *_source.tar.gz:
      #       - lp_solve_5.5  like versions up to 5.5.2.11
      #       - lp_solve      like in version 5.5.2.14
      LPSOLVE_SOURCE_ROOT_FOLDER: lp_solve

    steps:

    - name: Checkout
      uses: actions/checkout@v5

    - name: Install missing dependencies
      run: |
        set -v # echo commands

        sudo apt-get update
        sudo apt-get install -y \
            dos2unix

    - name: Fix EOL for Windows-related files
      run: |
        set -v # echo commands

        find -name "*.bat" -exec unix2dos -q {} \;
        find -name "*.sln" -exec unix2dos -q {} \;
        find -name "*.vcproj" -exec unix2dos -q {} \;
        find -name "*.vcxproj" -exec unix2dos -q {} \;
        find -name "*.rc" -exec unix2dos -q {} \;
        find -name "*.def" -exec unix2dos -q {} \;
        find -name "*.net" -exec unix2dos -q {} \;

    # Ensure this is done *before* adding any file in the workspace (like generated .tar.gz)
    # otherwise they will end up in lp_solve_${{ env.LPSOLVE_VERSION }}_source.tar.gz file
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_source.tar.gz
      run: ./release_process/build-targz-source.sh

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_bfp_*_source.tar.gz
      run: ./release_process/build-targz-bfp_XX_source.sh

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_xli_*_source.tar.gz
      run: ./release_process/build-targz-xli_XX_source.sh

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_AMPL_source.tar.gz
      run: ./release_process/build-targz-AMPL_source.sh

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_{Euler,FreeMat,PHP,Python,Sysquake}_source.tar.gz
      run: ./release_process/build-targz-manyextras_source.sh

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       extra/MATLAB/lpsolve/bin/win{32,64}/lp_explicit.lib
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_MATLAB_source.tar.gz
      run: ./release_process/build-targz-MATLAB_source.sh

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_octave_source.tar.gz
      run: ./release_process/build-targz-octave_source.sh

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_OMATRIX_source.tar.gz
      run: ./release_process/build-targz-OMATRIX_source.sh

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_scilab_source.tar.gz
      run: ./release_process/build-targz-scilab_source.sh

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_c.tar.gz
      run: ./release_process/build-targz-c.sh

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_doc.tar.gz
      run: ./release_process/build-targz-doc.sh

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.job }}
        compression-level: 0 # no compression - already compressed
        retention-days: 1
        path: |
          *.tar.gz

  collect-all-release-files:
    runs-on: ubuntu-latest
    needs:
      - build-win64
      - build-win32
      - zip-on-windows
      - tar-gz-on-linux
    steps:

      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          # TODO: all files here reproduces what was released with 5.5.2.14
          #       EXCEPT lp_solve_..._IDE_Setup.exe which we were not able to build automatically
          #       Note that 5.5.2.14 is missing .zip/.tar.gz files compared to 5.5.2.11 as well
          #       as missing files within its .zip/.tar.gz files as mentioned above.
          name: release-files
          delete-merged: true
          compression-level: 0 # no compression - already compressed
