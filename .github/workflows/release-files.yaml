name: 'Prepare Release Files'

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+.[0-9]+'
    branches:
      - 'gh-actions-release-files*' # TODO: For testing the workflow only

jobs:
  determine-version:
    runs-on: ubuntu-latest

    outputs:
      LPSOLVE_VERSION: ${{ steps.extract-version.outputs.LPSOLVE_VERSION }}

    steps:
    - name: Checkout
      uses: actions/checkout@v5

    # TODO: in a real release, we _might_ want to extract that number from the tag instead
    #       or maybe update the values in lp_lib.h based on the values extracted from the tag
    - name: Extract Version Number
      id: extract-version
      # lp_lib.h contains the version information as:
      #     #define MAJORVERSION  5
      #     #define MINORVERSION  5
      #     #define RELEASE       2
      #     #define BUILD        14
      run: |
        LP_MAJOR=$( sed -n -E 's/^\s*#define\s+MAJORVERSION\s+([0-9]+).*$/\1/p' $GITHUB_WORKSPACE/lp_lib.h )
        LP_MINOR=$( sed -n -E 's/^\s*#define\s+MINORVERSION\s+([0-9]+).*$/\1/p' $GITHUB_WORKSPACE/lp_lib.h )
        LP_RELEASE=$( sed -n -E 's/^\s*#define\s+RELEASE\s+([0-9]+).*$/\1/p' $GITHUB_WORKSPACE/lp_lib.h )
        LP_BUILD=$( sed -n -E 's/^\s*#define\s+BUILD\s+([0-9]+).*$/\1/p' $GITHUB_WORKSPACE/lp_lib.h )
        LPSOLVE_VERSION=$LP_MAJOR.$LP_MINOR.$LP_RELEASE.$LP_BUILD
        echo "Version is $LPSOLVE_VERSION"
        echo "LPSOLVE_VERSION=$LPSOLVE_VERSION" >> "$GITHUB_OUTPUT"

  build-win64:
    needs: determine-version
    runs-on: windows-latest

    env:
      LPSOLVE_VERSION: ${{ needs.determine-version.outputs.LPSOLVE_VERSION }}
      LPSOLVE_PLATFORM: 'win64'

    steps:

    - name: Checkout
      uses: actions/checkout@v5

    - name: Configure build tools
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ env.LPSOLVE_PLATFORM }}

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_dev_${{ env.LPSOLVE_PLATFORM }}.zip
      run: |
        echo "Building lpsolve55 library for platform $env:LPSOLVE_PLATFORM"
        pushd $env:GITHUB_WORKSPACE/lpsolve55
        ./cvc8NOmsvcrt.bat
        popd

        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_dev_${{ env.LPSOLVE_PLATFORM }}.zip"

        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
          lp_Hash.h `
          lp_lib.h `
          lp_matrix.h `
          lp_mipbb.h `
          lp_SOS.h `
          lp_types.h `
          lp_utils.h

        cd lpsolve55/bin/${{ env.LPSOLVE_PLATFORM }}
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
          * `
          '-x!lpsolve55.exp'

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       bfp_etaPFI.dll
    #       bfp_GLPK.dll
    #       bfp_LUSOL.dll
    #       contents.txt
    #       xli_CPLEX.dll
    #       xli_DIMACS.dll
    #       xli_LINDO.dll
    #       xli_MathProg.dll
    #       xli_MPS.dll
    #       xli_XPRESS.dll
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: |
        echo "Building lp_solve.exe for platform $env:LPSOLVE_PLATFORM"
        pushd $env:GITHUB_WORKSPACE/lp_solve
        ./cvc8.bat
        popd

        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_exe_${{ env.LPSOLVE_PLATFORM }}.zip"

        cd $env:GITHUB_WORKSPACE/lp_solve/bin/${{ env.LPSOLVE_PLATFORM }}
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath lp_solve.exe

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       bin/win64/lp_explicit.lib
    #       mxlpsolve.mexw64
    # If we decide not to ship those anymore, should we include Makefile.m instead like MATLAB.htm describes?
    # Maybe also the *.h and *.c that might be needed to build these within MATLAB?
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_MATLAB_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_MATLAB_exe_${{ env.LPSOLVE_PLATFORM }}.zip"

        cd $env:GITHUB_WORKSPACE/extra/MATLAB/lpsolve
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
            *.m `
            changes `
            README.txt `
            '-x!Makefile.m'

        cd $env:GITHUB_WORKSPACE/extra/man
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
            MATLAB.htm

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       bin/win64/sclpsolve.dll
    #       macros/lib
    # If we decide not to ship those anymore, should we include src/ folder?
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_scilab_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_scilab_exe_${{ env.LPSOLVE_PLATFORM }}.zip"

        cd $env:GITHUB_WORKSPACE/extra/scilab/lpsolve
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 -r $zipPath `
            * `
            '-x!src/'

        cd $env:GITHUB_WORKSPACE/extra/man
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
            Scilab.htm

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}.chm
      run: |
        cd $env:GITHUB_WORKSPACE/extra/man
        ./gen.bat
        cp *.chm $env:GITHUB_WORKSPACE

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.LPSOLVE_PLATFORM }}
        compression-level: 0 # no compression - already compressed
        retention-days: 1
        path: |
          *.zip
          *.chm

  build-win32:
    needs: determine-version
    runs-on: windows-latest

    env:
      LPSOLVE_VERSION: ${{ needs.determine-version.outputs.LPSOLVE_VERSION }}
      LPSOLVE_PLATFORM: 'win32'

    steps:

    - name: Checkout
      uses: actions/checkout@v5

    - name: Configure build tools
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ env.LPSOLVE_PLATFORM }}

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_dev_${{ env.LPSOLVE_PLATFORM }}.zip
      run: |
        echo "Building lpsolve55 library for platform $env:LPSOLVE_PLATFORM"
        pushd $env:GITHUB_WORKSPACE/lpsolve55
        ./cvc8NOmsvcrt.bat
        popd

        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_dev_${{ env.LPSOLVE_PLATFORM }}.zip"

        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
          lp_Hash.h `
          lp_lib.h `
          lp_matrix.h `
          lp_mipbb.h `
          lp_SOS.h `
          lp_types.h `
          lp_utils.h

        cd lpsolve55/bin/${{ env.LPSOLVE_PLATFORM }}
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
          * `
          '-x!lpsolve55.exp'

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       bfp_etaPFI.dll
    #       bfp_GLPK.dll
    #       bfp_LUSOL.dll
    #       contents.txt
    #       xli_CPLEX.dll
    #       xli_DIMACS.dll
    #       xli_LINDO.dll
    #       xli_LPFML.dll
    #       xli_MathProg.dll
    #       xli_MPS.dll
    #       xli_XPRESS.dll
    #       xli_ZIMPL.dll
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: |
        echo "Building lp_solve.exe for platform $env:LPSOLVE_PLATFORM"
        pushd $env:GITHUB_WORKSPACE/lp_solve
        ./cvc8.bat
        popd

        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_exe_${{ env.LPSOLVE_PLATFORM }}.zip"

        cd $env:GITHUB_WORKSPACE/lp_solve/bin/${{ env.LPSOLVE_PLATFORM }}
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath lp_solve.exe

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       lpsolve.exe (which seems to be built from extra/AMPL/solvers/lpsolve/makefile5*.vc)
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_AMPL_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_AMPL_exe_${{ env.LPSOLVE_PLATFORM }}.zip"

        cd $env:GITHUB_WORKSPACE/extra/AMPL/solvers/lpsolve
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
            changes `
            README

        cd $env:GITHUB_WORKSPACE/extra/man
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
            AMPL.htm

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       eulpsolve.dll(which seems to be built from extra/Euler/cvc.bat)
    #       intsimplex.e
    #       loadlpsolve.en
    #       loadlpsolve70.en
    #       Test Problems.en
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_Euler_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_Euler_exe_${{ env.LPSOLVE_PLATFORM }}.zip"

        cd $env:GITHUB_WORKSPACE/extra/Euler
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
            changes `
            *.en `
            *.e `
            README.txt

        cd $env:GITHUB_WORKSPACE/extra/man
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
            Euler.htm

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       fmlpsolve.dll(which seems to be built from extra/FreeMat/cvc.bat)
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_FreeMat_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_FreeMat_exe_${{ env.LPSOLVE_PLATFORM }}.zip"

        cd $env:GITHUB_WORKSPACE/extra/FreeMat
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
            changes `
            *.m `
            README.txt

        cd $env:GITHUB_WORKSPACE/extra/man
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
            FreeMat.htm

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       bin/win32/lp_explicit.lib
    #       mxlpsolve.dll
    #       mxlpsolve.mexw32
    # If we decide not to ship those anymore, should we include Makefile.m instead like MATLAB.htm describes?
    # Maybe also the *.h and *.c that might be needed to build these within MATLAB?
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_MATLAB_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_MATLAB_exe_${{ env.LPSOLVE_PLATFORM }}.zip"

        cd $env:GITHUB_WORKSPACE/extra/MATLAB/lpsolve
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
            *.m `
            changes `
            README.txt `
            '-x!Makefile.m'

        cd $env:GITHUB_WORKSPACE/extra/man
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
            MATLAB.htm

    # TODO: This only contains an HTML file, do we still want to release this?
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_MSF_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_MSF_exe_${{ env.LPSOLVE_PLATFORM }}.zip"

        cd $env:GITHUB_WORKSPACE/extra/man
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
            MSF.htm

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       octlpsolve.oct
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_octave_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_octave_exe_${{ env.LPSOLVE_PLATFORM }}.zip"

        cd $env:GITHUB_WORKSPACE/extra/octave/lpsolve
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 -r $zipPath `
            changes `
            *.m `
            README.txt

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       omlpsolve.dll (which seems built from cvc.bat)
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_OMATRIX_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_OMATRIX_exe_${{ env.LPSOLVE_PLATFORM }}.zip"

        cd $env:GITHUB_WORKSPACE/extra/O-MATRIX/lpsolve
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 -r $zipPath `
            changes `
            *.oms `
            README.txt

        cd $env:GITHUB_WORKSPACE/extra/man
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
            O-Matrix.htm

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       php4/php_phplpsolve55.dll
    #       php5_2/php_phplpsolve55.dll
    #       php5_3/php_phplpsolve55.dll
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_PHP_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_PHP_exe_${{ env.LPSOLVE_PLATFORM }}.zip"

        cd $env:GITHUB_WORKSPACE/extra/PHP
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 -r $zipPath `
            changes `
            *.php `
            README.txt

        cd $env:GITHUB_WORKSPACE/extra/man
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
            PHP.htm

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       bin/win32/sclpsolve.dll
    #       macros/lib
    # If we decide not to ship those anymore, should we include src/ folder?
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_scilab_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_scilab_exe_${{ env.LPSOLVE_PLATFORM }}.zip"

        cd $env:GITHUB_WORKSPACE/extra/scilab/lpsolve
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 -r $zipPath `
            * `
            '-x!src/'

        cd $env:GITHUB_WORKSPACE/extra/man
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
            Scilab.htm

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       sqlpsolveext.dll (seems to be built from cvc.bat)
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_Sysquake_exe_${{ env.LPSOLVE_PLATFORM }}.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_Sysquake_exe_${{ env.LPSOLVE_PLATFORM }}.zip"

        cd $env:GITHUB_WORKSPACE/extra/Sysquake
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 -r $zipPath `
            changes `
            *.lml `
            README.txt

        cd $env:GITHUB_WORKSPACE/extra/man
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
            Sysquake.htm

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.LPSOLVE_PLATFORM }}
        compression-level: 0 # no compression - already compressed
        retention-days: 1
        path: |
          *.zip

  zip-on-windows:
    needs: determine-version
    runs-on: windows-latest

    env:
      LPSOLVE_VERSION: ${{ needs.determine-version.outputs.LPSOLVE_VERSION }}

    steps:

    - name: Checkout
      uses: actions/checkout@v5

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_access.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_access.zip"

        cd $env:GITHUB_WORKSPACE/extra/Access
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
          demo.mdb

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       lpsolve55COM.dll
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_COM.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_COM.zip"

        cd $env:GITHUB_WORKSPACE/extra/COM
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 -r $zipPath `
          * `
          '-x!demo.vbg' `
          '-x!lpsolve55ASP.cls'

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_cs.net.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_cs.net.zip"

        cd $env:GITHUB_WORKSPACE/extra/cs.net
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
          * `
          '-x!app.config'

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_Delphi.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_Delphi.zip"

        cd $env:GITHUB_WORKSPACE/extra/Delphi
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
          cppc.bat `
          demo.dpr `
          lp.lp `
          lpsolve.inc `
          lpsolve.pas

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_excel.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_excel.zip"

        cd $env:GITHUB_WORKSPACE/extra/excel
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
          demo.xls

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_IDE_source.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_IDE_source.zip"

        cd $env:GITHUB_WORKSPACE/extra/LPSolveIDE/IDE15
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
          InnoSetup/L* `
          *.*

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       lib/mac/build-osx
    #       lib/ux32/liblpsolve55j.so
    #       lib/ux64/liblpsolve55j.so
    #       lib/win32/lpsolve55j.dll
    #       lib/win64/lpsolve55j.dll
    #       lib/junit.jar
    #       lib/lpsolve55j.jar
    #       lib/build
    #       lib/build.bat
    # We have 2 extra files in zip:
    #       lp_solve_5.5_java/src/java/Perf.java
    #       lp_solve_5.5_java/src/java/IsolatedTest.java
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_java.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_java.zip"

        cd $env:GITHUB_WORKSPACE/extra

        # TODO, this could probably be done with .gitattributes
        echo "Fixing newlines of Unix scripts"
        $scriptFiles=@("lp_solve_5.5_java/demo/build", "lp_solve_5.5_java/demo/run_demo", "lp_solve_5.5_java/demo/run_unittests", "lp_solve_5.5_java/src/java/lpsolve/build")
        foreach ($f in $scriptFiles) {
          (Get-Content $f -Raw).Replace("`r`n","`n") | Set-Content $f -NoNewLine -Force
        }

        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 -r $zipPath `
          lp_solve_5.5_java/demo `
          lp_solve_5.5_java/demo2 `
          lp_solve_5.5_java/docs `
          lp_solve_5.5_java/src `
          lp_solve_5.5_java/CHANGES.txt `
          lp_solve_5.5_java/LGPL `
          lp_solve_5.5_java/README.html `
          '-x!lp_solve_5.5_java/demo/*.class' `
          '-x!lp_solve_5.5_java/demo/*.log' `
          '-x!lp_solve_5.5_java/demo/lpsolve' `
          '-x!lp_solve_5.5_java/src/java/*.class' `
          '-x!model.lp'

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_MSF_source.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_MSF_source.zip"

        cd $env:GITHUB_WORKSPACE/extra/MSF
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 -r $zipPath `
          *

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_vb.net.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_vb.net.zip"

        cd $env:GITHUB_WORKSPACE/extra/VB.NET
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
          * `
          '-x!app.config'

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_vb.zip
      run: |
        $zipPath = "$env:GITHUB_WORKSPACE/lp_solve_${{ env.LPSOLVE_VERSION }}_vb.zip"

        cd $env:GITHUB_WORKSPACE/extra/vb
        echo "Packaging files from $PWD"
        7z a -tzip -bso0 -bsp0 $zipPath `
            Module1.bas `
            lpsolve55.cls `
            demo.vbp

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.job }}
        compression-level: 0 # no compression - already compressed
        retention-days: 1
        path: |
          *.zip
          README.txt

  tar-gz-on-linux:
    needs: determine-version
    runs-on: ubuntu-latest

    env:
      LPSOLVE_VERSION: ${{ needs.determine-version.outputs.LPSOLVE_VERSION }}
      # TODO: decide what we want as root folder inside the *_source.tar.gz:
      #       - lp_solve_5.5  like versions up to 5.5.2.11
      #       - lp_solve      like in version 5.5.2.14
      LPSOLVE_SOURCE_ROOT_FOLDER: lp_solve

    steps:

    - name: Checkout
      uses: actions/checkout@v5

    - name: Install missing dependencies
      run: |
        set -v # echo commands

        sudo apt-get update
        sudo apt-get install -y \
            dos2unix

    - name: Fix EOL for Windows-related files
      run: |
        set -v # echo commands

        find -name "*.bat" -exec unix2dos -q {} \;
        find -name "*.sln" -exec unix2dos -q {} \;
        find -name "*.vcproj" -exec unix2dos -q {} \;
        find -name "*.vcxproj" -exec unix2dos -q {} \;
        find -name "*.rc" -exec unix2dos -q {} \;
        find -name "*.def" -exec unix2dos -q {} \;
        find -name "*.net" -exec unix2dos -q {} \;

    # Ensure this is done *before* adding any file in the workspace (like generated .tar.gz)
    # otherwise they will end up in lp_solve_${{ env.LPSOLVE_VERSION }}_source.tar.gz file
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_source.tar.gz
      run: |
        tar -czf ${GITHUB_WORKSPACE}/lp_solve_${LPSOLVE_VERSION}_source.tar.gz \
            --transform "s,^,${LPSOLVE_SOURCE_ROOT_FOLDER}/," \
            --exclude-vcs \
            --exclude-vcs-ignores \
            --exclude=output \
            --exclude=xli \
            --exclude=extra \
            --exclude=.github \
            --exclude=bfp/bfp_etaPFI \
            --exclude=bfp/bfp_GLPK \
            *

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_bfp_*source.tar.gz
      run: |
        for i in etaPFI GLPK LUSOL
        do
          echo "Packaging lp_solve_${LPSOLVE_VERSION}_bfp_${i}_source.tar.gz"
          tar -czf ${GITHUB_WORKSPACE}/lp_solve_${LPSOLVE_VERSION}_bfp_${i}_source.tar.gz \
              --transform "s,^,${LPSOLVE_SOURCE_ROOT_FOLDER}/," \
              --exclude-vcs-ignores \
              bfp/bfp_${i} \
              bfp/*.*
        done

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_xli_*source.tar.gz
      run: |
        for i in CPLEX LINDO LPFML MathProg MPS XPRESS
        do
          echo "Packaging lp_solve_${LPSOLVE_VERSION}_xli_${i}_source.tar.gz"
          tar -czf ${GITHUB_WORKSPACE}/lp_solve_${LPSOLVE_VERSION}_xli_${i}_source.tar.gz \
              --transform "s,^,${LPSOLVE_SOURCE_ROOT_FOLDER}/," \
              --exclude-vcs-ignores \
              xli/xli_${i} \
              xli/*.*
        done

        # xli_DIMACS
        echo "Packaging lp_solve_${LPSOLVE_VERSION}_xli_DIMACS_source.tar.gz"
        tar -czf ${GITHUB_WORKSPACE}/lp_solve_${LPSOLVE_VERSION}_xli_DIMACS_source.tar.gz \
            --transform "s,^extra/man,xli/xli_DIMACS," \
            --transform "s,^,${LPSOLVE_SOURCE_ROOT_FOLDER}/," \
            --exclude-vcs-ignores \
            xli/xli_DIMACS \
            xli/*.* \
            extra/man/DIMACS_*.htm \
            extra/man/dimacs_*.gif

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_AMPL_source.tar.gz
      run: |
        tar -czf ${GITHUB_WORKSPACE}/lp_solve_${LPSOLVE_VERSION}_AMPL_source.tar.gz \
            --transform "s,^extra/man,extra/AMPL/solvers/lpsolve," \
            --transform "s,^,${LPSOLVE_SOURCE_ROOT_FOLDER}/," \
            --exclude-vcs-ignores \
            extra/AMPL/solvers \
            extra/man/AMPL.htm

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_{Euler,FreeMat,PHP,Python,Sysquake}_source.tar.gz
      run: |
        for i in Euler FreeMat PHP Python Sysquake
        do
          echo "Packaging lp_solve_${LPSOLVE_VERSION}_${i}_source.tar.gz"
          tar -czf ${GITHUB_WORKSPACE}/lp_solve_${LPSOLVE_VERSION}_${i}_source.tar.gz \
              --transform "s,^extra/man,extra/${i}," \
              --transform "s,^,${LPSOLVE_SOURCE_ROOT_FOLDER}/," \
              --exclude-vcs-ignores \
              extra/${i} \
              extra/man/${i}.htm
        done

    # TODO: zip here reproduces what was released with 5.5.2.14 which is missing files compared to 5.5.2.11:
    #       extra/MATLAB/lpsolve/bin/win{32,64}/lp_explicit.lib
    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_MATLAB_source.tar.gz
      run: |
        tar -czf ${GITHUB_WORKSPACE}/lp_solve_${LPSOLVE_VERSION}_MATLAB_source.tar.gz \
            --transform "s,^extra/man,extra/MATLAB/lpsolve," \
            --transform "s,^,${LPSOLVE_SOURCE_ROOT_FOLDER}/," \
            --exclude-vcs-ignores \
            extra/MATLAB \
            extra/man/MATLAB.htm

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_octave_source.tar.gz
      run: |
        tar -czf ${GITHUB_WORKSPACE}/lp_solve_${LPSOLVE_VERSION}_octave_source.tar.gz \
            --transform "s,^extra/man/octave.htm,extra/octave/lpsolve/Octave.htm," \
            --transform "s,^,${LPSOLVE_SOURCE_ROOT_FOLDER}/," \
            --exclude-vcs-ignores \
            extra/octave \
            extra/man/octave.htm

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_OMATRIX_source.tar.gz
      run: |
        tar -czf ${GITHUB_WORKSPACE}/lp_solve_${LPSOLVE_VERSION}_OMATRIX_source.tar.gz \
            --transform "s,^extra/man,extra/O-MATRIX/lpsolve," \
            --transform "s,^,${LPSOLVE_SOURCE_ROOT_FOLDER}/," \
            --exclude-vcs-ignores \
            extra/O-MATRIX \
            extra/man/O-Matrix.htm

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_scilab_source.tar.gz
      run: |
        tar -czf ${GITHUB_WORKSPACE}/lp_solve_${LPSOLVE_VERSION}_scilab_source.tar.gz \
            --transform "s,^extra/man/Scilab.htm,extra/scilab/lpsolve/man/scilab.htm," \
            --transform "s,^,${LPSOLVE_SOURCE_ROOT_FOLDER}/," \
            --exclude-vcs-ignores \
            extra/scilab \
            extra/man/Scilab.htm

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_c.tar.gz
      run: |
        cd extra/c
        tar -czf ${GITHUB_WORKSPACE}/lp_solve_${LPSOLVE_VERSION}_c.tar.gz \
            --exclude-vcs-ignores \
            --exclude=lp.lp \
            *

    - name: Build lp_solve_${{ env.LPSOLVE_VERSION }}_doc.tar.gz
      run: |
        cd extra/man
        tar -czf ${GITHUB_WORKSPACE}/lp_solve_${LPSOLVE_VERSION}_doc.tar.gz \
            --exclude-vcs-ignores \
            --exclude=arv \
            --exclude=Win32 \
            --exclude=*.bat \
            --exclude=BuildLog.htm \
            --exclude=HTMLHelp.* \
            --exclude=lp_solve.hh* \
            --exclude=man.* \
            --exclude=man0.* \
            *

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.job }}
        compression-level: 0 # no compression - already compressed
        retention-days: 1
        path: |
          *.tar.gz

  collect-all-release-files:
    runs-on: ubuntu-latest
    needs:
      - build-win64
      - build-win32
      - zip-on-windows
      - tar-gz-on-linux
    steps:

      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          # TODO: all files here reproduces what was released with 5.5.2.14
          #       EXCEPT lp_solve_..._IDE_Setup.exe which we were not able to build automatically
          #       Note that 5.5.2.14 is missing .zip/.tar.gz files compared to 5.5.2.11 as well
          #       as missing files within its .zip/.tar.gz files as mentioned above.
          name: release-files
          delete-merged: true
          compression-level: 0 # no compression - already compressed
