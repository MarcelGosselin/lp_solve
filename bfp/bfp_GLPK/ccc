# glpk is needed to compile this library. See at ftp://prep.ai.mit.edu/pub/gnu/glpk/

# Tested with glpk 4.2 and 4.7 and 4.13

# Location where glpk is located, defaults to /glpk/glpk-4.13 if not set
glpkdir=${glpkdir:-/glpk/glpk-4.13}

if [ -f ${glpkdir}/src/glprng.c ]
then glpk1=${glpkdir}/src/glprng.c
fi
glpk="${glpkdir}/src/glpinv.c ${glpkdir}/src/glplib1a.c ${glpkdir}/src/glplib2.c ${glpk1} ${glpkdir}/src/glpluf.c"

src="../../colamd/colamd.c ../../shared/commonlib.c lp_glpkLU.c ../../lp_utils.c ${glpk}"

opts='-O3'
#opts=''

if [ "$PLATFORM" = "RS6000" ]
then opts="$opts"
     so="-bM:SRE -bE:../bfp_lpsolve.exp"
     #so="$so -e _nostart"
     so="$so -bnoentry"
elif [ "$PLATFORM" = "SCO_UNIX" ]
then
     opts='-O0'
     so="-G -dy"
     opts="$opts -DNOLONGLONG $so"
else opts="$opts -fpic"
     so="-shared -Wl,-Bsymbolic -Wl,-soname,libbfp_GLPK.so"
fi

c=${CC:-cc}

# Determine platform if not set.
# CI will set LPSOLVE_PLATFORM when doing cross-compilation because it cannot run '$MYTMP/platform' executable.
if [ "$LPSOLVE_PLATFORM" = "" ]; then
     MYTMP=`mktemp -d "${TMPDIR:-/tmp}"/lp_solve_XXXXXX`

     #determine platform (32/64 bit)
     >"$MYTMP"/platform.c
     echo '#include <stdlib.h>'>>"$MYTMP"/platform.c
     echo '#include <stdio.h>'>>"$MYTMP"/platform.c
     echo 'int main(){printf("ux%d", (int) (sizeof(void *)*8)); return 0;}'>>"$MYTMP"/platform.c
     $c "$MYTMP"/platform.c -o "$MYTMP"/platform
     PLATFORM=`"$MYTMP"/platform`
     rm "$MYTMP"/platform "$MYTMP"/platform.c >/dev/null 2>&1
else
     PLATFORM=$LPSOLVE_PLATFORM
fi

mkdir bin bin/$PLATFORM >/dev/null 2>&1

$c -s -c $opts -I.. -I../.. -I../../colamd -I../../shared -I. -I${glpkdir}/include -DRoleIsExternalInvEngine -DINVERSE_ACTIVE=INVERSE_GLPKLU $src
$c $so -o bin/$PLATFORM/libbfp_GLPK.so `echo $src|sed s/[.]c/.o/g|sed 's/[^ ]*\///g'` -lc -lm

rm *.o >/dev/null
